{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentName": {
            "value": "Day0-KeyVault",
            "metadata": {
                // "subscription name"
                "subscriptionId": "subscriptionId_place_holder",
                "resourceGroupName": "resourceGroupName_place_holder"
            }
        },
        "keyVault": {
            "value": {
                "name": "keyvault_place_holder",
                "properties": {
                    "accessPolicies": [
                        {
                            // Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. 
                            // The object ID must be unique for the list of access policies. 
                            // Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets.
                            // 
                            "objectId": "objectId_place_holder",
                            "permissions": {
                                // Specifies the permissions to keys in the vault. 
                                // Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, 
                                // update, import, delete, backup, restore, recover, and purge.
                                "keys": [
                                    "all"
                                ],
                                // Specifies the permissions to secrets in the vault. 
                                // Valid values are: all, get, list, set, delete, backup, restore, recover, and purge.
                                "secrets": []
                            }
                        },
                        {
                            // Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. 
                            // The object ID must be unique for the list of access policies. 
                            // Get it by using Get-AzADUser or 
                            // az ad sp list --filter "displayname eq 'service connection'" --query "[0].id"
                            "objectId": "objectId_place_holder",
                            "permissions": {
                                // Specifies the permissions to keys in the vault. 
                                // Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, 
                                // update, import, delete, backup, restore, recover, and purge.
                                "keys": [
                                    "list",
                                    "encrypt",
                                    "decrypt",
                                    "get"
                                ],
                                // Specifies the permissions to secrets in the vault. 
                                // Valid values are: all, get, list, set, delete, backup, restore, recover, and purge.
                                "secrets": []
                            }
                        },
                        {
                            // Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. 
                            // The object ID must be unique for the list of access policies. 
                            // Get it by using Get-AzADUser or 
                            // az ad sp list --filter "displayname eq 'objectId_place_holder'" --query "[0].id"
                            "objectId": "objectId_place_holder",
                            "permissions": {
                                // Specifies the permissions to keys in the vault. 
                                // Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, 
                                // update, import, delete, backup, restore, recover, and purge.
                                "keys": [
                                    "list",
                                    "encrypt",
                                    "decrypt",
                                    "get"
                                ],
                                // Specifies the permissions to secrets in the vault. 
                                // Valid values are: all, get, list, set, delete, backup, restore, recover, and purge.
                                "secrets": []
                            }
                        }
                    ],
                    "enableSoftDelete": true,
                    // Specifies whether the key vault is a standard vault or a premium vault.
                    "sku": {
                        "Name": "standard"
                    }
                },
                "keys": [
                    {
                        "name": "pulumi-default-key",
                        "properties": {
                            "kty": "RSA",
                            "keySize": 4096,
                            "keyOps": [
                                "decrypt",
                                "encrypt",
                                "sign",
                                "unwrapKey",
                                "verify",
                                "wrapKey"
                            ],
                            "attributes": {
                                "enabled": true
                            },
                            "rotationPolicy": {
                                "lifetimeActions": [
                                    {
                                        "action": {
                                            "type": "Notify"
                                        },
                                        "trigger": {
                                            "timeBeforeExpiry": "P30D"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        }
    }
}